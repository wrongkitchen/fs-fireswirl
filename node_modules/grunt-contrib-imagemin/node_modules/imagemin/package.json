{
  "name": "imagemin",
  "version": "0.4.7",
  "description": "Minify images",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/kevva/imagemin"
  },
  "author": {
    "name": "Kevin Mårtensson",
    "email": "kevinmartensson@gmail.com",
    "url": "https://github.com/kevva"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "bin": {
    "imagemin": "cli.js"
  },
  "scripts": {
    "test": "mocha --reporter list --timeout 50000"
  },
  "files": [
    "cli.js",
    "index.js"
  ],
  "keywords": [
    "compress",
    "gif",
    "image",
    "jpeg",
    "minify",
    "png",
    "svg"
  ],
  "dependencies": {
    "fs-extra": "^0.10.0",
    "get-stdin": "^0.1.0",
    "image-type": "^0.1.4",
    "nopt": "^3.0.1",
    "rimraf": "^2.2.6",
    "stat-mode": "^0.2.0",
    "tempfile": "^0.1.3",
    "ware": "^0.3.0",
    "imagemin-gifsicle": "^0.1.1",
    "imagemin-jpegtran": "^0.1.0",
    "imagemin-optipng": "^0.1.0",
    "imagemin-pngquant": "^0.1.2",
    "imagemin-svgo": "^0.1.0"
  },
  "devDependencies": {
    "mocha": "^1.18.2"
  },
  "optionalDependencies": {
    "imagemin-gifsicle": "^0.1.1",
    "imagemin-jpegtran": "^0.1.0",
    "imagemin-optipng": "^0.1.0",
    "imagemin-pngquant": "^0.1.2",
    "imagemin-svgo": "^0.1.0"
  },
  "readme": "# imagemin [![Build Status](https://travis-ci.org/kevva/imagemin.svg?branch=master)](https://travis-ci.org/kevva/imagemin)\r\n\r\n> Minify images seamlessly with Node.js\r\n\r\n\r\n## Install\r\n\r\n```bash\r\n$ npm install --save imagemin\r\n```\r\n\r\n\r\n## Usage\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .src('foo.jpg')\r\n    .dest('foo-optimized.jpg')\r\n    .use(Imagemin.jpegtran({ progressive: true }));\r\n\r\nimagemin.optimize(function (err, file) {\r\n    console.log(file);\r\n    // => { contents: <Buffer 89 50 4e ...>, mode: '0644' }\r\n});\r\n```\r\n\r\n\r\n## API\r\n\r\n### new Imagemin()\r\n\r\nCreates a new `Imagemin` instance.\r\n\r\n### .use(plugin)\r\n\r\nAdd a `plugin` to the middleware stack.\r\n\r\n### .src(file)\r\n\r\nSet the file to be optimized. Can be a `Buffer` or the path to a file.\r\n\r\n### .dest(file)\r\n\r\nSet the destination to where your file will be written. If you don't set any destination\r\nthe file won't be written.\r\n\r\n### .optimize(cb)\r\n\r\nOptimize your file with the given settings.\r\n\r\n### .run(file, cb)\r\n\r\nRun all middleware plugins on your file.\r\n\r\n## Plugins\r\n\r\nThe following [plugins](https://www.npmjs.org/browse/keyword/imageminplugin) are bundled with imagemin:\r\n\r\n* [gifsicle](#gifsicle) — Compress GIF images.\r\n* [jpegtran](#jpegtran) — Compress JPG images.\r\n* [optipng](#optipng) — Lossless compression of PNG images.\r\n* [pngquant](#pngquant) — Lossy compression of PNG images.\r\n* [svgo](#svgo) — Compress SVG images.\r\n\r\n### .gifsicle()\r\n\r\nCompress GIF images.\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .use(Imagemin.gifsicle({ interlaced: true }));\r\n```\r\n\r\n### .jpegtran()\r\n\r\nCompress JPG images.\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .use(Imagemin.jpegtran({ progressive: true }));\r\n```\r\n\r\n### .optipng()\r\n\r\nLossless compression of PNG images.\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .use(Imagemin.optipng({ optimizationLevel: 3 }));\r\n```\r\n\r\n### .pngquant()\r\n\r\nLossy compression of PNG images.\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .use(Imagemin.pngquant());\r\n```\r\n\r\n### .svgo()\r\n\r\nCompress SVG images.\r\n\r\n```js\r\nvar Imagemin = require('imagemin');\r\n\r\nvar imagemin = new Imagemin()\r\n    .use(Imagemin.svgo());\r\n```\r\n\r\n## CLI\r\n\r\n```bash\r\n$ npm install --global imagemin\r\n```\r\n\r\n```bash\r\n$ imagemin --help\r\n\r\nUsage\r\n  $ imagemin <file>\r\n  $ cat <file> | imagemin\r\n\r\nExample\r\n  $ imagemin foo.png > foo-optimized.png\r\n  $ cat foo.png | imagemin > foo-optimized.png\r\n\r\nOptions\r\n  -i, --interlaced                    Extract archive files on download\r\n  -o, --optimizationLevel <number>    Path to download or extract the files to\r\n  -p, --progressive                   Strip path segments from root when extracting\r\n```\r\n\r\n\r\n## Related\r\n\r\n- [imagemin-app](https://github.com/kevva/imagemin-app)\r\n- [gulp-imagemin](https://github.com/sindresorhus/gulp-imagemin)\r\n- [grunt-contrib-imagemin](https://github.com/gruntjs/grunt-contrib-imagemin)\r\n\r\n\r\n## License\r\n\r\nMIT © [Kevin Mårtensson](http://kevinmartensson.com)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kevva/imagemin/issues"
  },
  "homepage": "https://github.com/kevva/imagemin",
  "_id": "imagemin@0.4.7",
  "_shasum": "9165a8185204b1af2ad41a0e40cd51ea64fa89b2",
  "_from": "imagemin@^0.4.5",
  "_resolved": "https://registry.npmjs.org/imagemin/-/imagemin-0.4.7.tgz"
}
